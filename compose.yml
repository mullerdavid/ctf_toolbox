version: '3.4'

include:
  - path: tulip/docker-compose.yml
    env_file:
      - tulip/.env.example
      - .env

#networks:
#  internal:

volumes:
  elastic-data: #for ES data persistency
  evebox-data: #for EveBox data persistency

services:
  elasticsearch:
    image: elasticsearch:8.10.2
    restart: unless-stopped
    env_file:
      - elasticsearch/elasticsearch.env
    environment:
      - "ES_JAVA_OPTS=-Xms${ELASTIC_MEMORY:-4G} -Xmx${ELASTIC_MEMORY:-4G}"
    volumes:
      - ${ELASTIC_DATAPATH:-elastic-data}:/usr/share/elasticsearch/data
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 3
    networks:
      internal:
  arkime:
    build:
      context: arkime
      dockerfile: Dockerfile-arkime
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "[ $(curl --silent localhost:8005) = 'Unauthorized' ] || exit 1"]
        start_period: 120s
        interval: 60s
        timeout: 30s
        retries: 3
    depends_on:
      elasticsearch:
        condition: service_healthy
    #ports:
    #   - "8005:8005"
    volumes:
      - ${TRAFFIC_DIR_HOST}/arkime:/data
      - ${TRAFFIC_DIR_HOST}/suricata_logs:/eve:ro
    networks:
      internal:
  suricata:
    build:
      context: suricata
      dockerfile: Dockerfile-suricata
    restart: unless-stopped
    volumes:
      - ${TRAFFIC_DIR_HOST}/suricata:/data
      - ${TRAFFIC_DIR_HOST}/suricata_logs:/eve
    cap_add:
      - SYS_NICE
  pcapmover:
    build:
      context: pcapmover
      dockerfile: Dockerfile-pcapmover
    restart: unless-stopped
    environment:
      - TRAFFIC_DIR_DOCKER=false
    volumes:
      - ${TRAFFIC_DIR_HOST}:/data # all data
  evebox:
    image: jasonish/evebox
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:5636 || exit 1"]
        start_period: 120s
        interval: 60s
        timeout: 30s
        retries: 3
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - EVEBOX_HTTP_TLS_ENABLED=false
      - EVEBOX_AUTHENTICATION_REQUIRED=false
    command: ["--elasticsearch", "http://elasticsearch:9200", "--input", "/eve/eve.json", "--data-directory", "/state"]
    #ports:
    #   - "5636:5636"
    volumes:
      - ${TRAFFIC_DIR_HOST}/suricata_logs:/eve:ro
      - ${EVEBOX_DATAPATH:-evebox-data}:/state
    networks:
      internal:
  haproxy:
    image: haproxy
    restart: unless-stopped
    depends_on:
      evebox:
        condition: service_started
      arkime:
        condition: service_started
      frontend:
        condition: service_started
    ports:
      - "80:80"
    volumes:
      - ./haproxy:/usr/local/etc/haproxy:ro
    networks:
      internal:
    

# docker compose up -d --build
# docker compose up -d --build api

# wsl -d docker-desktop
# sudo sysctl -w vm.max_map_count=262144

# docker exec ctf_toolbox-pcapmover-1 bash -c 'touch /data/*.pcap'
# docker compose up --build -d --force-recreate

# TODO: suricata disable signatures test
# TODO: restarts